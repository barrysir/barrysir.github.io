{"version":3,"file":"421.21ac6.js","mappings":"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","sources":["webpack://ddr-card-draw/./src/drawing-context.tsx","webpack://ddr-card-draw/./src/zustand/contextual-zustand.ts","webpack://ddr-card-draw/./src/song-jacket.tsx","webpack://ddr-card-draw/./src/song-search/song-search.css?9189","webpack://ddr-card-draw/./src/song-search/search-result.tsx","webpack://ddr-card-draw/./src/song-search/index.tsx","webpack://ddr-card-draw/./src/song-card/card-label.css?76ea","webpack://ddr-card-draw/./src/song-card/card-label.tsx","webpack://ddr-card-draw/./src/song-card/use-player-label.ts","webpack://ddr-card-draw/./src/song-card/icon-menu.tsx","webpack://ddr-card-draw/./src/song-card/song-card.css?7edc","webpack://ddr-card-draw/./src/song-card/song-card.tsx"],"sourcesContent":["import { ReactNode } from 'react';\nimport { StoreApi } from 'zustand';\nimport { draw, drawOngeki } from './card-draw';\nimport { useConfigState } from './config-state';\nimport { createContextualStore } from './zustand/contextual-zustand';\nimport { useDrawState } from './draw-state';\nimport {\n  Drawing,\n  EligibleChart,\n  PlayerActionOnChart,\n  PocketPick,\n} from './models/Drawing';\nimport { SerializibleStore } from './zustand/shared-zustand';\n\nconst stubDrawing: Drawing = {\n  id: 'stub',\n  players: [],\n  charts: [],\n  bans: [],\n  pocketPicks: [],\n  protects: [],\n  winners: [],\n};\n\ninterface DrawingProviderProps {\n  initialDrawing: Drawing;\n  children?: ReactNode;\n}\n\nexport interface DrawingContext extends Drawing, SerializibleStore<Drawing> {\n  updateDrawing: StoreApi<Drawing>['setState'];\n  incrementPriorityPlayer(): void;\n  redrawAllCharts(): void;\n  redrawChart(chartId: string): void;\n  resetChart(chartId: string): void;\n  /**\n   * handles any of the protect/pocket-pick/ban actions a user may take on a drawn chart\n   * @param action type of action being performed\n   * @param chartId id of the chart being acted upon\n   * @param player the player acting on the chart, 1 or 2\n   * @param chart new chart being pocket picked, if this is a pocket pick action\n   */\n  handleBanProtectReplace(\n    action: 'ban' | 'protect' | 'pocket',\n    chartId: string,\n    player: number,\n    chart?: EligibleChart,\n  ): void;\n  setWinner(chartId: string, p: number | null): void;\n}\n\nfunction keyFromAction(action: 'ban' | 'protect' | 'pocket') {\n  switch (action) {\n    case 'ban':\n      return 'bans';\n    case 'protect':\n      return 'protects';\n    case 'pocket':\n      return 'pocketPicks';\n  }\n}\n\nconst {\n  Provider: DrawingProvider,\n  useContextValue: useDrawing,\n  StoreIndex: allDrawingStores,\n  useStore: useDrawingStore,\n} = createContextualStore<DrawingContext, DrawingProviderProps>(\n  (props, set, get) => ({\n    ...props.initialDrawing,\n    updateDrawing: set,\n    incrementPriorityPlayer() {\n      set((d) => {\n        let priorityPlayer = d.priorityPlayer;\n        if (!priorityPlayer) {\n          priorityPlayer = 1;\n        } else {\n          priorityPlayer += 1;\n          if (priorityPlayer >= d.players.length + 1) {\n            priorityPlayer = undefined;\n          }\n        }\n        return {\n          priorityPlayer,\n        };\n      });\n    },\n    resetChart(chartId) {\n      set((d) => ({\n        bans: d.bans.filter((p) => p.chartId !== chartId),\n        protects: d.protects.filter((p) => p.chartId !== chartId),\n        pocketPicks: d.pocketPicks.filter((p) => p.chartId !== chartId),\n        winners: d.pocketPicks.filter((p) => p.chartId !== chartId),\n      }));\n    },\n    redrawChart(chartId) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      const newChart = drawOngeki(\n        useDrawState.getState().gameData!,\n        {\n          ...useConfigState.getState(),\n          chartCount: 1,\n        },\n        get().charts.filter((c) => c.id != chartId),\n      ).charts[0];\n      set((d) => ({\n        charts: d.charts.map((chart) => {\n          if (chart.id === chartId) {\n            newChart.id = chartId;\n            return newChart;\n          }\n          return chart;\n        }),\n      }));\n    },\n    redrawAllCharts() {\n      const self = get();\n      const keepChartIds = new Set([\n        ...self.pocketPicks.map((pick) => pick.chartId),\n        ...self.protects.map((pick) => pick.chartId),\n      ]);\n      const keepCharts = self.charts.filter((c) => keepChartIds.has(c.id));\n      const newCharts = draw(useDrawState.getState().gameData!, {\n        ...useConfigState.getState(),\n        chartCount: get().charts.length - keepCharts.length,\n      });\n      set(() => ({\n        charts: [...keepCharts, ...newCharts.charts],\n        bans: [],\n      }));\n    },\n    handleBanProtectReplace(action, chartId, player, newChart) {\n      const drawing = get();\n      const charts = drawing.charts.slice();\n      const key = keyFromAction(action);\n      const arr = drawing[key].slice() as PlayerActionOnChart[] | PocketPick[];\n\n      if (useConfigState.getState().orderByAction) {\n        const indexToCut = charts.findIndex((chart) => chart.id === chartId);\n        const [shiftedChart] = charts.splice(indexToCut, 1);\n        if (action === 'ban') {\n          // insert at tail of list\n          const insertPoint = charts.length;\n          charts.splice(insertPoint, 0, shiftedChart);\n        } else {\n          // insert at head of list, behind other picks\n          const insertPoint =\n            drawing.protects.length + drawing.pocketPicks.length;\n          charts.splice(insertPoint, 0, shiftedChart);\n        }\n        set({\n          charts,\n        });\n      }\n\n      const existingIndex = arr.findIndex((b) => b.chartId === chartId);\n      if (existingIndex >= 0) {\n        arr.splice(existingIndex, 1);\n      } else {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        arr.push({ player, pick: newChart!, chartId });\n      }\n      set({\n        [key]: arr,\n      });\n    },\n    serializeSyncFields() {\n      return Object.entries(get()).reduce((ret: Partial<Drawing>, [k, v]) => {\n        if (typeof v === 'function') {\n          return ret;\n        }\n        if (k.startsWith('__')) {\n          return ret;\n        }\n        ret[k as keyof Drawing] = v;\n        return ret;\n      }, {}) as Drawing;\n    },\n    setWinner(chartId, player) {\n      const arr = get().winners.slice();\n      const existingIndex = arr.findIndex((b) => b.chartId === chartId);\n      if (existingIndex >= 0) {\n        arr.splice(existingIndex, 1);\n      }\n      if (player) {\n        arr.push({ player, chartId });\n      }\n      set({\n        winners: arr,\n      });\n    },\n  }),\n  (p) => p.initialDrawing.id,\n  { initialDrawing: stubDrawing },\n);\n\nexport { useDrawing, DrawingProvider, allDrawingStores, useDrawingStore };\n","import {\n  createContext,\n  ReactNode,\n  useContext,\n  useState,\n  createElement,\n  useEffect,\n} from 'react';\nimport { StoreApi, useStore, createStore } from 'zustand';\n\nexport function createContextualStore<\n  StoreValue,\n  ProviderProps extends { children?: ReactNode },\n>(\n  /** returns initial store state for given props */\n  creator: (\n    p: ProviderProps,\n    set: StoreApi<StoreValue>['setState'],\n    get: StoreApi<StoreValue>['getState'],\n  ) => StoreValue,\n  /** returns a unique id for a given set of props */\n  getUniqueId: (p: ProviderProps) => string,\n  globalProps: ProviderProps,\n) {\n  const globalStore = createStore(creator.bind(undefined, globalProps));\n  const context = createContext(globalStore);\n  const StoreIndex = new Map<string, StoreApi<StoreValue>>();\n\n  const Provider = (props: ProviderProps) => {\n    const [localStore] = useState(() =>\n      createStore(creator.bind(undefined, props)),\n    );\n    useEffect(() => {\n      const thisId = getUniqueId(props);\n      StoreIndex.set(thisId, localStore);\n      return () => {\n        StoreIndex.delete(thisId);\n      };\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    return createElement(\n      context.Provider,\n      { value: localStore },\n      props.children,\n    );\n  };\n\n  const useThisStore = () => useContext(context);\n\n  function useContextValue(): StoreValue;\n  function useContextValue<Slice>(\n    selector: (state: StoreValue) => Slice,\n    equalityFn?: (a: Slice, b: Slice) => boolean,\n  ): Slice;\n  function useContextValue<Slice>(\n    selector?: (state: StoreValue) => Slice,\n    equalityFn?: (a: Slice, b: Slice) => boolean,\n  ) {\n    const store = useThisStore();\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    return selector ? useStore(store, selector, equalityFn) : useStore(store);\n  }\n\n  return {\n    Provider,\n    useContextValue,\n    StoreIndex,\n    useStore: useThisStore,\n  };\n}\n","import { Song } from './models/SongData';\nimport { Icon } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\n\ninterface Props {\n  song: Song;\n  className?: string;\n  height: number;\n}\n\nexport function SongJacket(props: Props) {\n  if (props.song.jacket) {\n    return (\n      <img\n        src={`${props.song.jacket}`}\n        className={props.className}\n        style={{ height: `${props.height}px` }}\n      />\n    );\n  }\n  return (\n    <div className={props.className}>\n      <Icon icon={IconNames.MUSIC} size={props.height} />\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"songSearch\":\"songSearch__SKgFq\"};","import { AbbrDifficulty, formatLevel } from '../game-data-utils';\nimport { useIntl } from '../hooks/useIntl';\nimport { Song, Chart } from '../models/SongData';\nimport { SongJacket } from '../song-jacket';\nimport styles from './song-search.css';\nimport { MenuItem } from '@blueprintjs/core';\n\nexport interface SearchResultData {\n  song: Song;\n  chart: Chart | 'none';\n}\n\ninterface ResultsProps {\n  data: SearchResultData;\n  selected: boolean;\n  handleClick: React.MouseEventHandler<HTMLElement>;\n}\n\nexport function SearchResult({ data, selected, handleClick }: ResultsProps) {\n  const song = data.song;\n  const { t } = useIntl();\n  let label: string | JSX.Element;\n  let disabled = false;\n  if (typeof data.chart === 'object') {\n    label = (\n      <>\n        <AbbrDifficulty diffClass={data.chart.diffClass} />{' '}\n        {formatLevel(data.chart.lvl)}\n      </>\n    );\n  } else if (typeof data.chart === 'string') {\n    label = t('noMatchingCharts');\n    disabled = true;\n  } else {\n    label = song.artist_translation || song.artist;\n  }\n\n  return (\n    <MenuItem\n      selected={selected}\n      disabled={disabled}\n      icon={<SongJacket song={song} height={26} className={styles.img} />}\n      text={song.name_translation || song.name}\n      label={label as string}\n      onClick={handleClick}\n    />\n  );\n}\n","import { useState } from 'react';\nimport { chartIsValid, getDrawnChart, songIsValid } from '../card-draw';\nimport { useConfigState } from '../config-state';\nimport { useDrawState } from '../draw-state';\nimport { EligibleChart } from '../models/Drawing';\nimport { Song } from '../models/SongData';\nimport { SearchResult, SearchResultData } from './search-result';\nimport { Omnibar } from '@blueprintjs/select';\nimport styles from './song-search.css';\n\ninterface Props {\n  isOpen: boolean;\n  onSongSelect(song: Song, chart?: EligibleChart): void;\n  onCancel(): void;\n}\n\nexport function SongSearch(props: Props) {\n  const { isOpen, onSongSelect, onCancel } = props;\n  const [searchTerm, updateSearchTerm] = useState('');\n  const config = useConfigState();\n  const fuzzySearch = useDrawState((s) => s.fuzzySearch);\n\n  let items: SearchResultData[] = [];\n  if (fuzzySearch) {\n    const songs = fuzzySearch\n      .search(searchTerm)\n      .filter((song) => songIsValid(config, song, true))\n      .slice(0, 30);\n    for (const song of songs) {\n      const validCharts = song.charts.filter((chart) =>\n        chartIsValid(config, chart, true),\n      );\n      for (const chart of validCharts) {\n        items.push({ song, chart });\n      }\n      if (!validCharts.length) {\n        items.push({ song, chart: 'none' });\n      }\n    }\n    items = items.slice(0, config.constrainPocketPicks ? 30 : 15);\n  }\n\n  return (\n    <Omnibar\n      isOpen={isOpen}\n      onClose={onCancel}\n      query={searchTerm}\n      onQueryChange={updateSearchTerm}\n      onItemSelect={(item) =>\n        onSongSelect(\n          item.song,\n          item.chart === 'none' || !item.chart\n            ? undefined\n            : getDrawnChart(\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                useDrawState.getState().gameData!,\n                item.song,\n                item.chart,\n              ),\n        )\n      }\n      items={items}\n      inputProps={{\n        placeholder: 'Find a song...',\n      }}\n      className={styles.songSearch}\n      itemRenderer={(data, itemProps) => (\n        <SearchResult\n          key={`${data.song.name}-${\n            typeof data.chart === 'string' ? data.chart : data.chart.diffClass\n          }`}\n          data={data}\n          selected={itemProps.modifiers.active}\n          handleClick={itemProps.handleClick}\n        />\n      )}\n    />\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"cardLabel\":\"cardLabel__S1b_R\",\"winner\":\"winner__R62ef\"};","import classNames from 'classnames';\nimport React from 'react';\nimport { Intent, Tag } from '@blueprintjs/core';\nimport styles from './card-label.css';\nimport { IconNames } from '@blueprintjs/icons';\nimport { usePlayerLabel } from './use-player-label';\n\nexport enum LabelType {\n  Protect = 1,\n  Ban,\n  Pocket,\n  Winner,\n}\n\ninterface Props {\n  player: number;\n  type: LabelType;\n  onRemove?: () => void;\n}\n\nfunction getIntent(type: LabelType) {\n  switch (type) {\n    case LabelType.Pocket:\n      return Intent.PRIMARY;\n    case LabelType.Ban:\n      return Intent.DANGER;\n    case LabelType.Protect:\n      return Intent.SUCCESS;\n    case LabelType.Winner:\n      return Intent.WARNING;\n  }\n}\n\nfunction getIcon(type: LabelType) {\n  switch (type) {\n    case LabelType.Pocket:\n      return IconNames.INHERITANCE;\n    case LabelType.Ban:\n      return IconNames.BAN_CIRCLE;\n    case LabelType.Protect:\n      return IconNames.LOCK;\n    case LabelType.Winner:\n      return IconNames.Crown;\n  }\n}\n\nexport function CardLabel({ player, type, onRemove }: Props) {\n  const label = usePlayerLabel(player);\n\n  const rootClassname = classNames(styles.cardLabel, {\n    [styles.winner]: type === LabelType.Winner,\n  });\n  return (\n    <div className={rootClassname}>\n      <Tag\n        intent={getIntent(type)}\n        icon={getIcon(type)}\n        large\n        onRemove={onRemove}\n      >\n        {label}\n      </Tag>\n    </div>\n  );\n}\n","import { useDrawing } from '../drawing-context';\n\nexport function usePlayerLabel(n: number) {\n  return useDrawing((d) => d.players[n - 1] || `P${n}`);\n}\n","import { useIntl } from '../hooks/useIntl';\nimport { IconNames, IconName } from '@blueprintjs/icons';\nimport { Menu, MenuItem, MenuDivider } from '@blueprintjs/core';\nimport { useDrawing } from '../drawing-context';\n\ninterface Props {\n  onStartPocketPick?: (p: number) => void;\n  onVeto?: (p: number) => void;\n  onProtect?: (p: number) => void;\n  onRedraw?: () => void;\n  onSetWinner?: (p: number | null) => void;\n}\n\nexport function IconMenu(props: Props) {\n  const { onStartPocketPick, onVeto, onProtect, onRedraw, onSetWinner } = props;\n\n  const { t } = useIntl();\n\n  return (\n    <Menu>\n      {onProtect && (\n        <PlayerList\n          icon={IconNames.LOCK}\n          text={t('songAction.lock')}\n          onClick={onProtect}\n        />\n      )}\n      {onStartPocketPick && (\n        <PlayerList\n          icon={IconNames.INHERITANCE}\n          text={t('songAction.pocketPick')}\n          onClick={onStartPocketPick}\n        />\n      )}\n      {onVeto && (\n        <PlayerList\n          icon={IconNames.BAN_CIRCLE}\n          text={t('songAction.ban')}\n          onClick={onVeto}\n        />\n      )}\n      {onSetWinner && (\n        <PlayerList\n          icon={IconNames.CROWN}\n          text={t('songAction.winner')}\n          onClick={onSetWinner}\n        />\n      )}\n      {onRedraw && (\n        <>\n          <MenuDivider />\n          <MenuItem\n            text={t('songAction.redraw')}\n            icon={IconNames.REFRESH}\n            onClick={onRedraw}\n          />\n        </>\n      )}\n    </Menu>\n  );\n}\n\ninterface IconRowProps {\n  icon: IconName;\n  text: string;\n  onClick: (p: number) => void;\n}\n\nfunction PlayerList({ icon, text, onClick }: IconRowProps) {\n  const players = useDrawing((d) => d.players);\n  return (\n    <MenuItem icon={icon} text={text}>\n      {players.map((p, idx) => (\n        <MenuItem\n          key={idx}\n          text={p || `P${idx + 1}`}\n          onClick={() => onClick(idx + 1)}\n          icon={IconNames.PERSON}\n        />\n      ))}\n    </MenuItem>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"chart\":\"chart__uhKDS\",\"clickable\":\"clickable__wEg17\",\"clickTarget\":\"clickTarget__uk0zq\",\"cardCenter\":\"cardCenter__I1U8K\",\"name\":\"name__n9rJM\",\"nameTranslation\":\"nameTranslation__Yw8Wv\",\"cardFooter\":\"cardFooter__bQ9F_\",\"shockBadge\":\"shockBadge__irMwM\",\"difficulty\":\"difficulty__eQWzH\",\"vetoed\":\"vetoed__DeTm3\",\"protected\":\"protected__gFnkz\",\"replaced\":\"replaced__wn0Q9\",\"hideVeto\":\"hideVeto__APgzc\",\"shrink\":\"shrink__YveJK\"};","import { Popover } from '@blueprintjs/core';\nimport classNames from 'classnames';\nimport { useMemo, useState } from 'react';\nimport { shallow } from 'zustand/shallow';\nimport { useConfigState } from '../config-state';\nimport { useDrawing } from '../drawing-context';\nimport { DrawnChart, EligibleChart } from '../models/Drawing';\nimport { SongSearch } from '../song-search';\nimport { detectedLanguage } from '../utils';\nimport { CardLabel, LabelType } from './card-label';\nimport { IconMenu } from './icon-menu';\nimport styles from './song-card.css';\nimport { formatLevel } from '../game-data-utils';\nimport { useDrawState } from '../draw-state';\n\nconst isJapanese = detectedLanguage === 'ja';\n\ntype Player = number;\n\ninterface IconCallbacks {\n  onVeto: (p: Player) => void;\n  onProtect: (p: Player) => void;\n  onReplace: (p: Player, chart: EligibleChart) => void;\n  onRedraw: () => void;\n  onReset: () => void;\n  onSetWinner: (p: Player | null) => void;\n}\n\ninterface Props {\n  onClick?: () => void;\n  chart: DrawnChart | EligibleChart;\n  vetoedBy?: Player;\n  protectedBy?: Player;\n  replacedBy?: Player;\n  winner?: Player;\n  replacedWith?: EligibleChart;\n  actionsEnabled?: boolean;\n}\n\nexport { Props as SongCardProps };\n\nfunction useIconCallbacksForChart(chartId: string): IconCallbacks {\n  const [handleBanPickPocket, redrawChart, resetChart, setWinner] = useDrawing(\n    (d) => [\n      d.handleBanProtectReplace,\n      d.redrawChart,\n      d.resetChart,\n      d.setWinner,\n    ],\n    shallow,\n  );\n\n  return useMemo(\n    () => ({\n      onVeto: handleBanPickPocket.bind(undefined, 'ban', chartId),\n      onProtect: handleBanPickPocket.bind(undefined, 'protect', chartId),\n      onReplace: handleBanPickPocket.bind(undefined, 'pocket', chartId),\n      onRedraw: redrawChart.bind(undefined, chartId),\n      onReset: resetChart.bind(undefined, chartId),\n      onSetWinner: setWinner.bind(undefined, chartId),\n    }),\n    [handleBanPickPocket, chartId, redrawChart, resetChart, setWinner],\n  );\n}\n\nexport function SongCard(props: Props) {\n  const dataSetName = useDrawState((s) => s.dataSetName);\n  const {\n    chart,\n    vetoedBy,\n    protectedBy,\n    replacedBy,\n    replacedWith,\n    winner,\n    actionsEnabled,\n  } = props;\n  const hideVetos = useConfigState((s) => s.hideVetos);\n\n  const [showingContextMenu, setContextMenuOpen] = useState(false);\n  const showMenu = () => setContextMenuOpen(true);\n  const hideMenu = () => setContextMenuOpen(false);\n\n  const [pocketPickPendingForPlayer, setPocketPickPendingForPlayer] =\n    useState<number>(0);\n\n  const {\n    name,\n    nameTranslation,\n    artist,\n    artistTranslation,\n    diffAbbr,\n    diffColor,\n    level,\n    levelConstant,\n    jacket,\n  } = replacedWith || chart;\n\n  const hasLabel = !!(vetoedBy || protectedBy || replacedBy);\n\n  let jacketBg = {};\n  if (jacket) {\n    jacketBg = {\n      backgroundImage: `url(\"${jacket}\")`,\n    };\n  }\n\n  const iconCallbacks = useIconCallbacksForChart((chart as DrawnChart).id);\n\n  let menuContent: undefined | JSX.Element;\n  if (actionsEnabled && !winner) {\n    if (!hasLabel) {\n      menuContent = (\n        <IconMenu\n          onProtect={iconCallbacks.onProtect}\n          onStartPocketPick={setPocketPickPendingForPlayer}\n          onVeto={iconCallbacks.onVeto}\n          onRedraw={iconCallbacks.onRedraw}\n          onSetWinner={iconCallbacks.onSetWinner}\n        />\n      );\n    } else if (!vetoedBy) {\n      menuContent = <IconMenu onSetWinner={iconCallbacks.onSetWinner} />;\n    }\n  }\n\n  const rootClassname = classNames(styles.chart, {\n    [styles.vetoed]: vetoedBy,\n    [styles.protected]: protectedBy,\n    [styles.replaced]: replacedBy,\n    [styles.clickable]: !!menuContent || !!props.onClick,\n    [styles.hideVeto]: hideVetos,\n  });\n\n  return (\n    <div\n      className={rootClassname}\n      onClick={\n        !menuContent || showingContextMenu || pocketPickPendingForPlayer\n          ? props.onClick\n          : showMenu\n      }\n      style={jacketBg}\n    >\n      <SongSearch\n        isOpen={!!pocketPickPendingForPlayer}\n        onSongSelect={(song, chart) => {\n          actionsEnabled &&\n            chart &&\n            iconCallbacks.onReplace(pocketPickPendingForPlayer as 1 | 2, chart);\n          setPocketPickPendingForPlayer(0);\n        }}\n        onCancel={() => setPocketPickPendingForPlayer(0)}\n      />\n      <div className={styles.cardCenter}>\n        {vetoedBy && (\n          <CardLabel\n            player={vetoedBy}\n            type={LabelType.Ban}\n            onRemove={iconCallbacks?.onReset}\n          />\n        )}\n        {protectedBy && (\n          <CardLabel\n            player={protectedBy}\n            type={LabelType.Protect}\n            onRemove={iconCallbacks?.onReset}\n          />\n        )}\n        {replacedBy && (\n          <CardLabel\n            player={replacedBy}\n            type={LabelType.Pocket}\n            onRemove={iconCallbacks?.onReset}\n          />\n        )}\n        {winner && (\n          <CardLabel\n            player={winner}\n            type={LabelType.Winner}\n            onRemove={() => iconCallbacks?.onSetWinner(null)}\n          />\n        )}\n        <div className={styles.name} title={nameTranslation}>\n          {name}\n        </div>\n        {isJapanese ? null : (\n          <div className={styles.nameTranslation}>{nameTranslation}</div>\n        )}\n        <div className={styles.artist} title={artistTranslation}>\n          {artist}\n        </div>\n      </div>\n\n      <Popover\n        content={menuContent}\n        isOpen={showingContextMenu}\n        onClose={hideMenu}\n        placement=\"top\"\n        modifiers={{\n          offset: { options: { offset: [0, 35] } },\n        }}\n      >\n        <div\n          className={styles.cardFooter}\n          style={{ backgroundColor: diffColor }}\n        >\n          <div className={styles.bpm}>\n            {dataSetName.startsWith('maimai')\n              ? chart.flags.findIndex((flag) => flag === 'std') !== -1\n                ? 'ST'\n                : 'DX'\n              : null}\n          </div>\n\n          <div className={styles.difficulty}>\n            {`${diffAbbr} ${formatLevel(level)} ${\n              levelConstant ? ` (${levelConstant.toFixed(1)})` : ''\n            }`}\n          </div>\n        </div>\n      </Popover>\n    </div>\n  );\n}\n"],"names":["Provider","DrawingProvider","useContextValue","useDrawing","StoreIndex","allDrawingStores","useStore","useDrawingStore","creator","getUniqueId","globalProps","globalStore","createStore","bind","undefined","initialDrawing","id","players","charts","bans","pocketPicks","protects","winners","context","createContext","Map","useThisStore","useContext","props","localStore","useState","useEffect","thisId","set","delete","createElement","value","children","selector","equalityFn","store","createContextualStore","get","updateDrawing","incrementPriorityPlayer","d","priorityPlayer","length","resetChart","chartId","filter","p","redrawChart","newChart","drawOngeki","useDrawState","getState","gameData","useConfigState","chartCount","c","map","chart","redrawAllCharts","self","keepChartIds","Set","pick","keepCharts","has","newCharts","draw","handleBanProtectReplace","action","player","drawing","slice","key","keyFromAction","arr","orderByAction","indexToCut","findIndex","shiftedChart","splice","insertPoint","existingIndex","b","push","serializeSyncFields","Object","entries","reduce","ret","_ref","k","v","startsWith","setWinner","SongJacket","song","jacket","_jsx","src","concat","className","style","height","Icon","icon","IconNames","MUSIC","size","SearchResult","data","selected","handleClick","t","useIntl","label","disabled","_jsxs","_Fragment","AbbrDifficulty","diffClass","formatLevel","lvl","artist_translation","artist","MenuItem","styles","img","text","name_translation","name","onClick","SongSearch","isOpen","onSongSelect","onCancel","searchTerm","updateSearchTerm","config","fuzzySearch","s","items","songs","search","songIsValid","validCharts","chartIsValid","constrainPocketPicks","Omnibar","onClose","query","onQueryChange","onItemSelect","item","getDrawnChart","inputProps","placeholder","songSearch","itemRenderer","itemProps","modifiers","active","LabelType","getIntent","type","Pocket","Intent","PRIMARY","Ban","DANGER","Protect","SUCCESS","Winner","WARNING","getIcon","INHERITANCE","BAN_CIRCLE","LOCK","Crown","CardLabel","onRemove","n","rootClassname","classNames","cardLabel","winner","Tag","intent","large","IconMenu","onStartPocketPick","onVeto","onProtect","onRedraw","onSetWinner","Menu","PlayerList","CROWN","MenuDivider","REFRESH","idx","PERSON","isJapanese","detectedLanguage","SongCard","dataSetName","vetoedBy","protectedBy","replacedBy","replacedWith","actionsEnabled","hideVetos","showingContextMenu","setContextMenuOpen","pocketPickPendingForPlayer","setPocketPickPendingForPlayer","nameTranslation","artistTranslation","diffAbbr","diffColor","level","levelConstant","hasLabel","jacketBg","backgroundImage","iconCallbacks","handleBanPickPocket","shallow","useMemo","onReplace","onReset","useIconCallbacksForChart","menuContent","vetoed","protected","replaced","clickable","hideVeto","showMenu","cardCenter","title","Popover","content","hideMenu","placement","offset","options","cardFooter","backgroundColor","bpm","flags","flag","difficulty","toFixed"],"sourceRoot":""}