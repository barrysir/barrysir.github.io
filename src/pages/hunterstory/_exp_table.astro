---
let {cols, toplevel} = Astro.props;

function formula(level) {
    return Math.floor(level*(level+1)*(level+2)/2);
}

function array_range(start, stop, step) {
    let c = [];
    for (let i=start; i<stop; i+=step) {
        c.push(i);
    }
    return c;
}

function array_step(start, step, count) {
    let c = [];
    for (let i=0; i<count; i++) {
        c.push(start + i*step);
    }
    return c;
}

function array_length_n(n) {
    return Array.from({ length: n }, (_, i) => i);
}

let totalRows = Math.ceil(toplevel/cols);
---

<style>
    th, td {
        text-align: center;
    }
</style>

<table>
    <thead>
        <tr>
            {array_length_n(cols).map((v) => (
                <td style="width:60px;"><b>Level</b></td>
                <td style="width:60px;"><b>EXP</b></td>
            ))}
        </tr>
    </thead>
    <tbody>
        {array_length_n(totalRows).map((r) => (
            <tr>
                {array_step(r+1, totalRows, cols).map((level) => (
                    (level <= toplevel) 
                        ? (
                            <td>{level}</td>
                            <td>{formula(level)}</td>
                        ) : (
                            <td></td>
                            <td></td>
                        )
                ))}
            </tr>
        ))}
    </tbody>
</table>
